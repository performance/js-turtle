// Begin Japanese 
四角 ='\
/* ここにプロセスを記述できます。 例えば： */\n\
\n\
四角 = ( 正方形の辺 ) => {\n\
  くりかえす(4, () => {\n\
    すすむ( 正方形の辺 );\n\
    みぎにまがる(90);\n\
  });\n\
}\n\
\n\
ひょうじ = () => {\n\
  しょいたい();\n\
  ふをかす();\n\
  いろをかえる( 1 );\n\
  _あちら_ 正方形の辺 = 100;\n\
  _あちら_ 色番号 = 0;\n\
  くりかえし( () => 正方形の辺 > 0, ()=> {\n\
    四角( 正方形の辺 );\n\
    みぎにまがる(36);\n\
    正方形の辺 = 正方形の辺 - 10;\n\
    色番号 = ( 色番号 + 1 ) % 16;\n\
    いろをかえる( 色番号 );\n\
  } );\n\
}\n\
'
時計 ='\
// గోడ 時計\n\
\n\
_いたるところ_   కొలత;\n\
\n\
// 時計 చుట్టూ క్షణముల గీతలు గీయుటకు\n\
_ほうほう_     క్షణముల_గీతలు(x, y, వ్యాసార్థము) {\n\
   _あちら_   గీత_長さ = 7;\n\
   _あちら_   ఖాళీ = వ్యాసార్థము - గీత_長さ;\n\
   いろをかえる( 1 );\n\
   はば(1);\n\
   かぞえながらくりかえす( 60, ( కో ) => {\n\
      _あちら_ థీటా = కో * 6;\n\
      // ప్రతి  ఐదవది దళసరి గా వేయవలెను\n\
      はば( ( ( కో % 5 ) ? 1 : 3)/130* కొలత)\n\
      ふでをあげる();\n\
      いちをうつる(0,0);\n\
      かくど(థీటా);\n\
      すすむ(ఖాళీ);\n\
      ふをおろす();\n\
      すすむ(గీత_長さ);\n\
   });\n\
   \n\
}\n\
\n\
\n\
// గంటలు, నిమిషాలూ సూచించే అంకెలు\n\
_ほうほう_     అంకెలు(x, y, వ్యాసార్థము) {\n\
   ふでをあげる();\n\
   _あちら_  అక్షర_おおきさ = 20/130 * కొలత\n\
   フォントをせっていする(అక్షర_おおきさ+"px sans-serif");\n\
   いろをかえる("నలుపు");\n\
   かぞえながらくりかえす( 12, ( గంట ) =>{\n\
      いちをうつる(x,y);\n\
      かくど(గంట * 30);\n\
      すすむ(వ్యాసార్థము); // to center of digit\n\
      かくど(180);\n\
      すすむ(10/130 * కొలత); // vertical correction to baseline\n\
      みぎにまがる(90);\n\
      // క్రింది, ఎడమ భాగమునకు అనుప్రస్థ సరదుబాటు\n\
      すすむ( ( (గంట < 10 ) ? 6 : 10 )/130 * కొలత)\n\
      // if (గంట < 10) {\n\
      //   すすむ(6/130 * కొలత); // horizontal correction to lower left corner\n\
      // } else {\n\
      //   すすむ(10/130 * కొలత)\n\
      // }\n\
      みぎにまがる(180);\n\
      かく(గంట);\n\
   })\n\
   ふをおろす();\n\
}\n\
\n\
// చేతులు గీయుటకు  \n\
_ほうほう_     చెయ్యి (థీటా, చెయ్యి_はば, 長さ, రంగు) {\n\
   _あちら_   కూచి_తగ్గింపు = 5;\n\
   _あちら_   కూచి_తగ్గింపులు = (長さ / కూచి_తగ్గింపు);\n\
   _あちら_   はば_సర్దుబాటు =  చెయ్యి_はば / కూచి_తగ్గింపులు;\n\
   いちをうつる(0, 0);\n\
   かくど(థీటా);\n\
   いろをかえる(రంగు);\n\
   // for (_いたるところ_   step = 0; step < 長さ; step = step + కూచి_తగ్గింపు) \n\
   かぞえながらくりかえす( కూచి_తగ్గింపులు, ( అడుగు) => \n\
   {\n\
      はば( చెయ్యి_はば ); // కుంచిక はば\n\
      すすむ(కూచి_తగ్గింపు);\n\
      చెయ్యి_はば =  చెయ్యి_はば  - はば_సర్దుబాటు;\n\
   }\n\
   );\n\
}\n\
\n\
_ほうほう_     చేతులు(గంటలు, నిమిషములు, క్షణములు) {\n\
    // క్షణముల చెయ్యి\n\
    _あちら_   క్షణముకెన్ని_డిగ్రీలు = 6;	// = 360 degrees/60 క్షణములు\n\
    చెయ్యి(క్షణములు * క్షణముకెన్ని_డిగ్రీలు, 4, 100/130 * కొలత, "red");\n\
    // నిమిషముల చెయ్యి \n\
    _あちら_   నిమిషానికెన్ని_డిగ్రీలు = 0.1;	// = 360 degrees /3600 క్షణములు /గంట\n\
    _あちら_   నిమిషములుInక్షణములు = నిమిషములు * 60 + క్షణములు;\n\
    చెయ్యి(నిమిషములుInక్షణములు * నిమిషానికెన్ని_డిగ్రీలు, 10, 100/130 * కొలత, "blue");\n\
    // గంటల చెయ్యి\n\
    _あちら_   గంటకెన్ని_డిగ్రీలు = .1/12;	// = నిమిషానికెన్ని_డిగ్రీలు / 12 గంటలు \n\
    _あちら_   గంటలుInక్షణములు = ((గంటలు % 12) * 3600) + నిమిషములుInక్షణములు;\n\
    చెయ్యి(గంటలుInక్షణములు * గంటకెన్ని_డిగ్రీలు, 10, 60/130 * కొలత, "green");\n\
}\n\
\n\
// 時計ను పునరావృతము చేయుటకు\n\
_ほうほう_     時計() {\n\
   けす();\n\
   కొలత = .9 *  Math.min( さいだいX(), さいだいY())\n\
   అంకెలు(0, 0, 110/130 * కొలత);\n\
   いろをかえる("lightgreen");\n\
   いちをうつる(0,0);\n\
   はば(1/130* కొలత)\n\
   まる(130/130 * కొలత );\n\
   క్షణముల_గీతలు(0, 0, 130/130 * కొలత );\n\
   _あちら_  సమయము = new Date();\n\
   చేతులు(సమయము.getHours(), సమయము.getMinutes(), సమయము.getSeconds());\n\
}\n\
\n\
_ほうほう_     ひょうじ() {\n\
   しょいたい();\n\
   ふをかす();\n\
   あそぶ(時計,1000); // 時計ను ప్రతి క్షణము పునరావృతము చేయ వలెను.\n\
}\n\
'
雪片 ='\
\n\
\n\
最小値 = Math.min\n\
\n\
_ほうほう_     コッホカーブ (長さ, 奥行き) {\n\
  もしこうならそうじゃないなら( () => (奥行き == 0),\n\
   () => {    すすむ(長さ);  },\n\
   () => {\n\
    //  ఎడమ వైపు బుడిప \n\
    コッホカーブ (長さ/3, 奥行き-1);\n\
    ひだりにまがる(60); \n\
    コッホカーブ (長さ/3, 奥行き-1);\n\
    みぎにまがる(120); \n\
    コッホカーブ (長さ/3, 奥行き-1);\n\
    ひだりにまがる(60); \n\
    コッホカーブ (長さ/3, 奥行き-1);\n\
  } )\n\
}\n\
\n\
\n\
_ほうほう_     コッホスノーフレーク (長さ, 奥行き) {\n\
  かくど (30);\n\
  いちをうつる(-長さ/2,-.3 * 長さ);\n\
  コッホカーブ (長さ, 奥行き);\n\
  みぎにまがる(120);\n\
  コッホカーブ (長さ, 奥行き);\n\
  みぎにまがる(120);\n\
  コッホカーブ (長さ, 奥行き);\n\
  みぎにまがる(120);\n\
}\n\
  \n\
雪片 = ()=> {\n\
  రేకుいろలు.push(らんすう(15) );\n\
  రేకుいろలు.shift();\n\
  かぞえながらくりかえす (6, ( క ) => {\n\
    いろをかえる( రేకుいろలు [క] );\n\
    コッホスノーフレーク( 長さ * (క+1) * (క+1), క)\n\
  } );\n\
}\n\
\n\
_ほうほう_     ひょうじ() {\n\
  しょいたい();\n\
  長さ = .045* 最小値(さいだいX(), さいだいY())\n\
  రేకుいろలు = [];\n\
  かぞえながらくりかえす (6, ( క ) => {\n\
    రేకుいろలు[క] = らんすう(6);\n\
  } );\n\
\n\
  ふをかす();\n\
  あそぶ(雪片,1)\n\
}\n\
'
さかな ='\
\n\
平方根 = Math.sqrt\n\
\n\
ひょうじ = () => {\n\
  しょいたい();\n\
  ふをかす();\n\
\n\
さかな = ( వ ) => {\n\
  まる( వ )\n\
  みぎにまがる( 90 );\n\
\n\
  ふでをあげる()\n\
  すすむ( వ );\n\
  ふをおろす()\n\
\n\
  ふをみせる();\n\
\n\
\n\
  ひだりにまがる( 45 );\n\
  すすむ( 2 * వ );\n\
  みぎにまがる(90+45)\n\
\n\
  すすむ( 平方根( 2 * వ * 2 * వ * 2 ) );\n\
\n\
  みぎにまがる(90+45)\n\
  すすむ( 2 * వ );\n\
  ひだりにまがる( 45 );\n\
\n\
  // ふをかす();\n\
\n\
  ふでをあげる()\n\
  すすむ( వ );\n\
  ふをおろす()\n\
\n\
  みぎにまがる( 90 );\n\
}\n\
\n\
色_さかな = (色番号) =>  {\n\
  いろをかえる(色番号)\n\
 さかな( 40 + ( 色番号 * 1 ) )\n\
} \n\
かぞえながらくりかえす( 16 , (క) => 色_さかな( క ) )\n\
\n\
}\n\
'
れんが ='\
// れんが ప్రస్తారము \n\
\n\
_いつも_    たかさ = 15\n\
_いつも_    はば = 2* たかさ \n\
\n\
// れんが == ఇటుక \n\
\n\
れんが = ( たかさ, はば, ఇష్టికいろ) => {\n\
  かたちをはじめめる()\n\
  くりかえす (2, () => {\n\
    すすむ( はば)\n\
    みぎにまがる(90)\n\
    すすむ( たかさ)\n\
    みぎにまがる(90)\n\
  })\n\
  かたちをおわる( ఇష్టికいろ)\n\
  すすむ( はば)\n\
}\n\
\n\
ひょうじ = () => {\n\
  しょいたい()\n\
 \n\
  yB = さいだいY()\n\
  xB = さいしょうX()\n\
   まわさないで()\n\
  みぎにまがる( 90)\n\
  いろをかえる( 7 )\n\
\n\
  くりかえし( () => కుంచిక.స్థానము.y > さいしょうY(), () => {\n\
    いちをうつる(xB, yB)\n\
    くりかえし( () => కుంచిక.స్థానము.x < さいだいX(), () => {\n\
      ふをおろす()\n\
      れんが(たかさ, はば, "darkred")\n\
      ふでをあげる()\n\
    } )\n\
    yB = yB - たかさ\n\
\n\
    いちをうつる(xB - はば/2, yB)\n\
    くりかえし( () => కుంచిక.స్థానము.x < さいだいX(), () => {\n\
      ふをおろす()\n\
      れんが(たかさ, はば, "darkred")\n\
      ふでをあげる()\n\
    } )\n\
    yB = yB - たかさ\n\
  } )\n\
}\n\
'
たまごがた ='\
// మూలము: https://pythonturtle.academy/tutorial-drawing-egg-shape-with-python-turtle/\n\
\n\
たまごがた = (x, y, おおきさ, かたむき) => {\n\
  ふでをあげる()\n\
  いちをうつる(x,y)\n\
  ふをおろす()\n\
  ほうこうをかえる(270+かたむき)\n\
  いろをかえる(4)\n\
  みぎのカーブ(おおきさ,180)\n\
  いろをかえる(1)\n\
  みぎのカーブ(2*おおきさ,45)\n\
  いろをかえる("10")\n\
  みぎのカーブ(0.586*おおきさ,90)\n\
  いろをかえる(1)\n\
  みぎのカーブ(2*おおきさ,45)\n\
}\n\
\n\
ひょうじ = () => {\n\
  しょいたい();\n\
  ふをかす();\n\
  たまごがた( 90, 90, 40, 0 )\n\
  たまごがた( 0, 0, 90, 45 )\n\
}\n\
'
ランゴーリ ='\
\n\
ひょうじ = () => {\n\
  しょいたい();\n\
    ふをかす();\n\
  くりかえす(6, () => {\n\
    いろをかえる( 0 );\n\
    みぎにまがる(180);\n\
    _あちら_ 正方形の辺 = 100;\n\
    _あちら_ 色番号 = 0;\n\
    くりかえし( () => 正方形の辺 > 0, ()=> {\n\
  \n\
      みぎのカーブ(正方形の辺, 30 );\n\
  \n\
      みぎにまがる(30);\n\
      正方形の辺 = 正方形の辺 - 10;\n\
      色番号 = ( 色番号  + 15 ) % 16;\n\
      いろをかえる( 色番号 );\n\
    } );\n\
  });\n\
\n\
  みぎにまがる(310);\n\
  ふでをあげる();\n\
  すすむ(60 );\n\
  ふをおろす()\n\
  いろをかえる( 13 );\n\
  いっぱいのまる(5 );\n\
  まる(10);\n\
}\n\
'
// End Japanese 

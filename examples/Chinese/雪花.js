

最小_值 = Math.min

_步骤_     科赫线 (长度, 深度) {
  如果_就_否则( () => (深度 == 0),
   () => {    向前移动(长度);  },
   () => {
    //  ఎడమ వైపు బుడిప 
    科赫线 (长度/3, 深度-1);
    向左转(60); 
    科赫线 (长度/3, 深度-1);
    向右转(120); 
    科赫线 (长度/3, 深度-1);
    向左转(60); 
    科赫线 (长度/3, 深度-1);
  } )
}


_步骤_     科赫雪花 (长度, 深度) {
  角度 (30);
  改变位置(-长度/2,-.3 * 长度);
  科赫线 (长度, 深度);
  向右转(120);
  科赫线 (长度, 深度);
  向右转(120);
  科赫线 (长度, 深度);
  向右转(120);
}
  
雪花 = ()=> {
  花瓣颜色.push(随机数(15) );
  花瓣颜色.shift();
  计数并重复 (6, ( క ) => {
    改变颜色为( 花瓣颜色 [క] );
    科赫雪花( 长度 * (క+1) * (క+1), క)
  } );
}

_步骤_     演示() {
  初始状态();
  长度 = .045* 最小_值(最大_X_值(), 最大_Y_值())
  花瓣颜色 = [];
  计数并重复 (6, ( క ) => {
    花瓣颜色[క] = 随机数(6);
  } );

  隐藏笔刷();
  播放(雪花,1)
}

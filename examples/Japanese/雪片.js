

最小値 = Math.min

_ほうほう_     コッホカーブ (長さ, 奥行き) {
  もしこうならそうじゃないなら( () => (奥行き == 0),
   () => {    すすむ(長さ);  },
   () => {
    //  ఎడమ వైపు బుడిప 
    コッホカーブ (長さ/3, 奥行き-1);
    ひだりにまがる(60); 
    コッホカーブ (長さ/3, 奥行き-1);
    みぎにまがる(120); 
    コッホカーブ (長さ/3, 奥行き-1);
    ひだりにまがる(60); 
    コッホカーブ (長さ/3, 奥行き-1);
  } )
}


_ほうほう_     コッホスノーフレーク (長さ, 奥行き) {
  かくど (30);
  いちをうつる(-長さ/2,-.3 * 長さ);
  コッホカーブ (長さ, 奥行き);
  みぎにまがる(120);
  コッホカーブ (長さ, 奥行き);
  みぎにまがる(120);
  コッホカーブ (長さ, 奥行き);
  みぎにまがる(120);
}
  
雪片 = ()=> {
  రేకుいろలు.push(らんすう(15) );
  రేకుいろలు.shift();
  かぞえながらくりかえす (6, ( క ) => {
    いろをかえる( రేకుいろలు [క] );
    コッホスノーフレーク( 長さ * (క+1) * (క+1), క)
  } );
}

_ほうほう_     ひょうじ() {
  しょいたい();
  長さ = .045* 最小値(さいだいX(), さいだいY())
  రేకుいろలు = [];
  かぞえながらくりかえす (6, ( క ) => {
    రేకుいろలు[క] = らんすう(6);
  } );

  ふをかす();
  あそぶ(雪片,1)
}
